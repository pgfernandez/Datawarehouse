# FACTURAS
# CREACIÓN DE TABLAS
USE ODS;

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS ODS_HC_FACTURAS;

CREATE TABLE ODS_HC_FACTURAS
(ID_FACTURA INT NOT NULL PRIMARY KEY
, ID_CLIENTE INT NOT NULL
, FECHA_INICIO DATETIME
, FECHA_FIN DATETIME
, FECHA_EMISION DATETIME
, FECHA_PAGO DATETIME
, ID_CICLO_FACTURACION INT(10) UNSIGNED NOT NULL
, CANTIDAD DECIMAL (9,2)
, ID_METODO_FACTURACION INT(10) UNSIGNED NOT NULL
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

DROP TABLE IF EXISTS ODS_DM_CICLO_FACTURACION;

CREATE TABLE ODS_DM_CICLO_FACTURACION
(ID_CICLO_FACTURACION INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY
, DE_CICLO_FACTURACION VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

DROP TABLE IF EXISTS ODS_DM_METODO_FACTURACION;

CREATE TABLE ODS_DM_METODO_FACTURACION
(ID_METODO_FACTURACION INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY
, DE_METODO_FACTURACION VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

# CREACION FK

USE ODS;

ALTER TABLE ODS_HC_FACTURAS ADD INDEX fk_fact_cli_idx (ID_CLIENTE ASC);
ALTER TABLE ODS_HC_FACTURAS ADD CONSTRAINT fk_fact_cli_idx FOREIGN KEY(ID_CLIENTE)
    REFERENCES ODS_HC_CLIENTES(ID_CLIENTE);

ALTER TABLE ODS_HC_FACTURAS ADD INDEX fk_fact_ciclo_idx (ID_CICLO_FACTURACION ASC);
ALTER TABLE ODS_HC_FACTURAS ADD CONSTRAINT fk_fact_ciclo_idx FOREIGN KEY(ID_CICLO_FACTURACION)
    REFERENCES ODS_DM_CICLO_FACTURACION(ID_CICLO_FACTURACION);

ALTER TABLE ODS_HC_FACTURAS ADD INDEX fk_fact_met_idx (ID_METODO_FACTURACION ASC);
ALTER TABLE ODS_HC_FACTURAS ADD CONSTRAINT fk_fact_met_idx FOREIGN KEY(ID_METODO_FACTURACION)
    REFERENCES ODS_DM_METODO_FACTURACION(ID_METODO_FACTURACION);

# POBLAMOS EL MODELO
# DIMENSION CICLOS DE FACTURACION
INSERT INTO ODS_DM_CICLO_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_CYCLE)) DE_CICLO_FACTURACION
, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT
WHERE TRIM(BILL_CYCLE)<>'';
INSERT INTO ODS_DM_CICLO_FACTURACION VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_CICLO_FACTURACION VALUES (98, 'NO APLICA', NOW(), NOW());
COMMIT;
ANALYZE TABLE ODS_DM_CICLO_FACTURACION;

# DIMENSION METODOS DE FACTURACION
INSERT INTO ODS_DM_METODO_FACTURACION (DE_METODO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_METHOD)) DE_METODO_FACTURACION
, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT
WHERE TRIM(BILL_METHOD)<>'';
INSERT INTO ODS_DM_METODO_FACTURACION VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_METODO_FACTURACION VALUES (98, 'NO APLICA', NOW(), NOW());
COMMIT;
ANALYZE TABLE ODS_DM_METODO_FACTURACION;

#TABLA DE HECHOS DE FACTURAS
#LA PARTE CLIENTES LA HE DEJADO PARA EL SIGUIENTE PASO
#DE MOMENTO LOS RELLENO COMO SI FUESEN TODOS DESCONOCIDOS
#YA QUE EN ODS_HC_CLIENTES FALTAN CLIENTES QUE TENGO EN STG_FACTURAS_FCT
INSERT INTO ODS_HC_FACTURAS 
(ID_FACTURA
, ID_CLIENTE
, FECHA_INICIO
, FECHA_FIN
, FECHA_EMISION
, FECHA_PAGO
, ID_CICLO_FACTURACION
, CANTIDAD
, ID_METODO_FACTURACION
, FC_INSERT
, FC_MODIFICACION)
SELECT SSFC.BILL_REF_NO
, 999999999
, CASE WHEN TRIM(SSFC.START_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.START_DATE, 10), '%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FECHA_INICIO
, CASE WHEN TRIM(SSFC.END_DATE)<>'' THEN STR_TO_DATE(SSFC.END_DATE, '%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FECHA_FIN
, CASE WHEN TRIM(SSFC.STATEMENT_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.STATEMENT_DATE, 10), '%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FECHA_EMISION
, CASE WHEN TRIM(SSFC.PAYMENT_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.PAYMENT_DATE, 10), '%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FECHA_PAGO
, OOCF.ID_CICLO_FACTURACION
, CASE WHEN TRIM(SSFC.AMOUNT)<>'' THEN CAST(SSFC.AMOUNT AS DECIMAL(9,2)) ELSE CAST('999999999,99' AS DECIMAL(9,2)) END CANTIDAD
, OOMF.ID_METODO_FACTURACION
, NOW()
, NOW()
FROM STAGE.STG_FACTURAS_FCT SSFC
INNER JOIN ODS.ODS_DM_CICLO_FACTURACION OOCF ON (OOCF.DE_CICLO_FACTURACION=TRIM(SSFC.BILL_CYCLE))
INNER JOIN ODS.ODS_DM_METODO_FACTURACION OOMF ON (OOMF.DE_METODO_FACTURACION=TRIM(SSFC.BILL_METHOD));

COMMIT;

#INSERTO LOS CLIENTES QUE ESTÁN EN FACTURAS
#YA QUE EN ODS_HC_CLIENTES ME FALTAN
#EL INNER JOIN CON CLIENTES NO ME DEVOLVÍA TODOS LOS CLIENTES
#Y PERDÍAMOS 50000 FACTURAS POR NO TENER LOS CLIENTES EN ODS_HC_CLIENTES
#ADEMÁS TARDABA 5 HORAS CON LOS 3 JOINS, DE ESTA FORMA GLOBAL EN DOS PASOS
#TARDA 30 SEGUNDOS
SET SQL_SAFE_UPDATES = 0;
UPDATE ODS_HC_FACTURAS OHF
INNER JOIN STAGE.STG_FACTURAS_FCT FACT ON OHF.ID_FACTURA = FACT.BILL_REF_NO
	SET
    OHF.ID_CLIENTE = FACT.CUSTOMER_ID;

COMMIT;

SET SQL_SAFE_UPDATES = 1;
ANALYZE TABLE ODS_HC_FACTURAS;

#AÑADIMOS LOS CLIENTES QUE ESTÁN EN 
#FACTURAS PERO QUE EN ODS_HC_CLIENTES
#NO ESTÁN, AUNQUE TODOS LOS DATOS SEAN DESCONOCIDOS
INSERT INTO ODS_HC_CLIENTES
SELECT distinct(FACT.ID_CLIENTE)
, 'DESCONOCIDO'
, 'DESCONOCIDO'
, '99-999-9999'
, 99
, 999999
, 9999999999
, 'DESCONOCIDO'
, STR_TO_DATE('31/12/9999','%d/%m/%Y')
, 999
, 999
, NOW()
, STR_TO_DATE('31/12/9998','%d/%m/%Y')
FROM ODS_HC_FACTURAS FACT
WHERE NOT EXISTS(
	SELECT null
    FROM ODS_HC_CLIENTES CLI
    WHERE CLI.ID_CLIENTE = FACT.ID_CLIENTE);

COMMIT;

SET FOREIGN_KEY_CHECKS=1;
